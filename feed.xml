<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://bvanlierop.github.io//</id><title>Bart van Lierop</title><subtitle>A minimal, portfolio, sidebar, bootstrap Jekyll theme with responsive web design and focuses on text presentation.</subtitle> <updated>2021-11-06T15:07:00+01:00</updated> <author> <name>Bart van Lierop</name> <uri>https://bvanlierop.github.io//</uri> </author><link rel="self" type="application/atom+xml" href="https://bvanlierop.github.io//feed.xml"/><link rel="alternate" type="text/html" hreflang="en-US" href="https://bvanlierop.github.io//"/> <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator> <rights> Â© 2021 Bart van Lierop </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Mocking The Filesystem Using Abstractions</title><link href="https://bvanlierop.github.io//posts/Mocking-The-Filesystem-Using-Abstractions/" rel="alternate" type="text/html" title="Mocking The Filesystem Using Abstractions" /><published>2021-03-31T18:00:00+02:00</published> <updated>2021-11-06T15:06:33+01:00</updated> <id>https://bvanlierop.github.io//posts/Mocking-The-Filesystem-Using-Abstractions/</id> <content src="https://bvanlierop.github.io//posts/Mocking-The-Filesystem-Using-Abstractions/" /> <author> <name>Bart van Lierop</name> </author> <category term="testing" /> <category term="design" /> <summary> Introduction On many occasions I come accross code that is tightly coupled to the file system. Here is an example of an import functionality using a CSV file read out: using System.Collections; using System.IO; public class DealershipImporter { public List&amp;lt;Dealership&amp;gt; Import(string dealershipCatalogCsvPath) { var dealerships = new List&amp;lt;Dea... </summary> </entry> <entry><title>Periodically Clean Merged Git Branches</title><link href="https://bvanlierop.github.io//posts/Clean-Git-Remote-Merged-Branches/" rel="alternate" type="text/html" title="Periodically Clean Merged Git Branches" /><published>2021-03-31T18:00:00+02:00</published> <updated>2021-04-14T15:10:08+02:00</updated> <id>https://bvanlierop.github.io//posts/Clean-Git-Remote-Merged-Branches/</id> <content src="https://bvanlierop.github.io//posts/Clean-Git-Remote-Merged-Branches/" /> <author> <name>Bart van Lierop</name> </author> <category term="continuous integration" /> <summary> Introduction In our team we had some trouble with old Git branches not being cleaned up although they were merged in the past. Jenkins (on Windows) would then also try to scan those which resulted in more resource usage. Sometimes somebody would manually delete the old branches but this is not a maintainable solution. Solution: The Cleaning Crew Just like any office building a regular clea... </summary> </entry> </feed>
